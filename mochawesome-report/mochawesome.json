{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2022-11-11T08:48:41.854Z",
    "end": "2022-11-11T08:48:42.875Z",
    "duration": 1021,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "59e0bb0a-3b1b-4821-819b-e8001828e91a",
      "title": "",
      "fullFile": "/Users/user/Tugas-14/Last.js",
      "file": "/Last.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b907fa20-cfb2-4975-9e0f-c5a746b7d16e",
          "title": "POST /api/authaccount/registration",
          "fullFile": "/Users/user/Tugas-14/Last.js",
          "file": "/Last.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create new Registration",
              "fullTitle": "POST /api/authaccount/registration create new Registration",
              "timedOut": false,
              "duration": 411,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request\n  .post(\"/api/authaccount/registration\")\n  .send({\n    \"name\":name,\n    \"email\":email,\n    \"password\":password\n  })\n\nexpect(response.status).to.eql(200)\nexpect(response.body.code).to.eql(0)\nexpect(response.body.data.Name).to.eql(name)\nexpect(response.body.data.Email).to.eql(email)",
              "err": {},
              "uuid": "a17356a7-3479-484d-81f8-871e688fef5d",
              "parentUUID": "b907fa20-cfb2-4975-9e0f-c5a746b7d16e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login",
              "fullTitle": "POST /api/authaccount/registration Login",
              "timedOut": false,
              "duration": 287,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request\n      .post(\"/api/authaccount/login\")\n      .send({\n\"email\":email,\n\"password\":password\n      })\n\n    expect(response.status).to.eql(200)\n    expect(response.body.code).to.eql(0)\n    expect(response.body.data.Name).to.eql(name)\n    expect(response.body.data.Email).to.eql(email)\n    expect(response.body.data.Token).to.not.eql(null)\n\n    token = response.body.data.Token\n    console.log(response.body)",
              "err": {},
              "uuid": "460d6bbc-e444-4c78-94d0-0c9315a0727f",
              "parentUUID": "b907fa20-cfb2-4975-9e0f-c5a746b7d16e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create New User",
              "fullTitle": "POST /api/authaccount/registration Create New User",
              "timedOut": false,
              "duration": 315,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request\n.post(\"/api/users\")\n.send({\n    \"name\": nameUser,\n    \"email\": emailUser,\n    \"password\": passwordUser\n})\n.set({\n    Authorization: \"Bearer \"+token\n})\nexpect(response.status).to.eql(201)\nexpect(response.body.name).to.eql(nameUser)\nexpect(response.body.email).to.eql(emailUser)",
              "err": {},
              "uuid": "dca7c066-ff2f-4b1c-91cc-5584e3cb0238",
              "parentUUID": "b907fa20-cfb2-4975-9e0f-c5a746b7d16e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a17356a7-3479-484d-81f8-871e688fef5d",
            "460d6bbc-e444-4c78-94d0-0c9315a0727f",
            "dca7c066-ff2f-4b1c-91cc-5584e3cb0238"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1013,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.1.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}